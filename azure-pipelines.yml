trigger:
- main

pool:
  name: default

stages:
  - stage: test_with_snyk_and_dependency_check
    displayName: 'Test with Snyk and Dependency Check'
    jobs:
      - job: tests
        displayName: 'Run Security and Dependency Tests'
        steps:
          - task: SnykSecurityScan@1
            inputs:
              serviceConnectionEndpoint: 'snykconx'
              testType: 'code'
              failOnIssues: false

          - task: dependency-check-build-task@6
            inputs:
              projectName: 'back'
              scanPath: '.'
              format: 'HTML'
              uploadReports: true 

  - stage: build_and_dockerize
    displayName: 'Build and Dockerize Spring Boot Application'
    jobs:
      - job: build_and_dockerize
        displayName: 'Build and Dockerize Application'
        steps:
          - checkout: self

          # Step 1: Vérifier l'installation de JDK 17
          - script: 
              java -version
              javac -version  # Assurez-vous que le compilateur javac est également disponible
            displayName: 'Verify JDK 17 Installation'

          # Step 2: Build Docker image
          - script: |
              docker build -t brahmieya/stageback:$(Build.BuildId) .
            displayName: 'Build Docker Image'

          # Step 3: Push Docker image to Docker Hub
          - task: Docker@2
            inputs:
              containerRegistry: 'duckerhub'
              repository: 'brahmieya/stageback'
              command: 'push'
              tags: '$(Build.BuildId)'

  - stage: scan_mysql_image
    displayName: 'Scan MySQL Image with Trivy'
    jobs:
      - job: scan_mysql
        displayName: 'Scan MySQL Image'
        steps:
          - script: |
              docker pull aquasec/trivy:latest
              docker run --rm aquasec/trivy:latest --timeout 10m  image mysql:latest > $(System.DefaultWorkingDirectory)/result.txt
            displayName: 'Scan MySQL image with Trivy'

          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(System.DefaultWorkingDirectory)/result.txt'
              artifactName: 'trivy-report'
              publishLocation: 'pipeline'

  - stage: deploy_to_k8s
    displayName: 'Deploy to Kubernetes'
    jobs:
      - job: deploy
        displayName: 'Deploy'
        steps:
          - task: Kubectl@1
            displayName: 'Apply Kubernetes Configuration'
            inputs:
              action: 'deploy'
              connectionType: 'kubernetesServiceConnection'
              kubernetesServiceConnection: 'connectioncluster'
              manifests: 'k8s/spring-boot-deployment.yaml'
