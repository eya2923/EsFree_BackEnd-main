trigger:
- main

pool:
  name: default

jobs:
- job: run_dast_scan
  displayName: Run DAST Scan
  steps:
  - task: Docker@2
    inputs:
      command: login
      containerRegistry: 'dockerhub' 
      azureSubscriptionEndpoint: 'MyDockerServiceConnection'

  - task: Bash@3
    displayName: 'Run OWASP ZAP Scan'
    inputs:
      targetType: 'inline'
      script: |
        echo "Starting OWASP ZAP Scan"
        mkdir -p $(pwd)/owaspzap
        echo "Created owaspzap directory"
        docker run --rm -v $(pwd)/owaspzap:/zap/wrk/:rw ghcr.io/zaproxy/zaproxy:stable zap-baseline.py -t http://172.213.198.195 -r /zap/wrk/zap_report.html 2> /dev/null; (($? == 2)) && echo 'Done' >&2
        echo "Finished OWASP ZAP Scan"

  - task: Bash@3
    displayName: 'Ensure report files exist'
    inputs:
      targetType: 'inline'
      script: |
        mkdir -p owaspzap
        if [ ! -f owaspzap/zap_report.html ]; then
          touch owaspzap/zap_report.html
        fi

  - task: CopyFiles@2
    condition: succeededOrFailed()
    inputs:
      SourceFolder: 'owaspzap/'
      TargetFolder: '$(Pipeline.Workspace)'

  - task: PublishPipelineArtifact@1
    condition: succeededOrFailed()
    inputs:
      targetPath: '$(Pipeline.Workspace)/zap_report.html'
      artifact: 'owasp_zap_report_html'
      publishLocation: 'pipeline'
    displayName: 'Publish ZAP HTML Report'
